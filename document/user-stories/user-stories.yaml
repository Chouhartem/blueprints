Admin stories:
  - title: Admin onboarding
    stories:
      - role: instance administrator
        what: generate individualized or multiple user invitation codes
        why: I can onboard my friends while keeping registration closed to the public
    extra:
      - background:
          - See issue [close registration unless you have been invited into a team](https://forum.cryptpad.org/d/118-close-registration-unless-you-have-been-invited-into-a-team)
          - Helps to prevent against spam/DoS registrations
  - title: Limited account creation
    stories:
      - role: administrator with limited disk space
        what: prevent malicious users from registering many accounts to bypass the storage quotas
        why: I can continue to provide a public service for honest users
    extra:
      - background:
          - (D)DoS attackers can register many users and upload large files
          - As attackers can bypass the (client-side) `scrypt` key derivation, it is cheap to register users
          - Captchas could be an option, however, it is questionable how effective they are. Furthermore they are bad for UI and accessibility. Captchas are [discussed for Mastodon](https://github.com/mastodon/mastodon/issues/877)
          - Another idea is to allow only invited participants to register, see
          - Alternatively, we can enable admin onboarding
Business stories:
  - title: Instance telemetry
    stories:
      - role: CEO of XWiki
        what: collect telemetry indicating the number of active users and  documents on a third-party instance
        why: I can include those metrics as a KPI in grant proposals
  - title: Legal operation
    role: CEO of an SME
    what: offer hosting of premium CryptPad accounts to individual users
    why: I can help sustain the development of the software and eventually make a profit
Developer stories:
  - title: Feature telemetry
    stories:
      - role: CryptPad developer
        what: measure how often a feature is used and by how many people
        why: I can decide whether its possible improvements should be prioritized
    extra:
      - background:
          - Currently possible to report back to CryptPad as soon as a button is clicked
Evil user stories:
  - title: Account impersonation
    stories:
      - who: malicious actor
        what: appear to be the account of a known target in a group
        why: their friends will add me as a contact and share documents with me
    extra:
      - countermeasures:
          - Account verification
  - title: Honeypot operator
    stories:
      - who: intelligence agent
        what: list my malicious server as a public instance on cryptpad.org
        why: I can compromise a particular demographic of users
    extra:
      - inline: (e.g., climate activists in France)
      - background:
          - We cannot technically stop malicious actors from running CryptPad instances.
          - What helps, however, is to provide a verified client, so that no malicious code can be delivered, and e2ee is still guaranteed.
  - title: Malicious JavaScript
    stories:
      - who: state actor
        what: seize a heavily used CryptPad server and serve malicious JavaScript
        why: I can actively collect the keys to every document when users visit the site
    extra:
      - countermeasures:
          - Verified client
  - title: Malicious JS - DNS variant
    stories:
      - who: authoritarian regime
        what: compel DNS server operators to direct users to my custom CryptPad front end
        why: I can serve whatever JS I want and use people's keys to load from the actual API server
  - extra:
      - countermeasures:
          - "[HSTS](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security) and [Certificate Transparency](https://en.wikipedia.org/wiki/Certificate_Transparency) can partially help"
  - title: Police informant
    stories:
      - who: law enforcement officer
        what: see who edited a document over its history
        why: I can add to the data I am collecting about a movement to track it down
    extra:
      - countermeasures:
          - "As [stated in the docs](https://docs.cryptpad.org/en/user_guide/security.html#trust-assumptions) we cannot protect metadata."
          - "The user's best bet is therefore to use Tor"
  - title: Terrorist cells
    stories:
      - who: white supremacist
        what: take advantage of free online services which make it difficult/impossible to analyze my social graph and similar metadata
        why: I can coordinate with my local, national, and international terrorist networks without facing any consequences for my horrendous behaviour and beliefs
  - extra:
      - countermeasures:
          - "We search social media and known problematic websites for links to <cryptpad.fr>"
          - "Independent instances probably lack the knowledge and resources to do that, so they could need some guidance from our side"
Shit user stories:
  - title: '"Access lists" without "access"'
    stories:
      - who: owner of a sensitive document
        what: add someone to the document's access list without actually giving them its keys
        why: it remains secure
        inline: "(???)"
  - title: Loading docs on mobile
    stories:
      - who: smartphone user
        what: open a CryptPad document
        problem: it doesn't load
  - title: Ownership
    stories:
      - who: registered user
        what: destroy a document I created
        problem: I did not choose to be an owner when I created the document
      - who: owner of the document
        what: share it with one of my contacts
        solution: add them as an owner
        inline: (I have no idea what "owner" means)
  - title: Uncertain folder membership
    stories:
      - who: creator of a shared folder
        what: lose track of who has access to the folder
        goal: cannot accidentally reveal confidential information
Honest user stories:
  - title: ciphersuites
    tags: roadmap
    id: ciphersuites
    link-to: TweetNaCl
    who: high-risk user
    what: use the most-secure cryptography for all my documents
    goal: my old documents are not readable by modern adversaries with new capabilities
    extra:
      - background:
          - There is currently no way to re-encrypt documents under new algorithms
          - Since documents may contain long-term secrets, they should be protected even against new vulnerabilities
      - acceptance criteria:
          - Shared URLs should still work
          - User's are not bothered with crypto details
          - There is one button to update _all_ documents
